[{"C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\index.js":"1","C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\App.js":"2","C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\reportWebVitals.js":"3","C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\actions\\store.js":"4","C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\components\\DCandidates.js":"5","C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\reducers\\index.js":"6","C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\reducers\\dCandidate.js":"7","C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\actions\\DCandidate.js":"8","C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\actions\\api.js":"9","C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\components\\DCandidateForm.js":"10","C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\components\\useForm.js":"11","C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\components\\index.js":"12","C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\components\\Footer.jsx":"13","C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\components\\Home.jsx":"14","C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\components\\Navbar.jsx":"15","C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\components\\Weather.jsx":"16"},{"size":535,"mtime":1655045874177,"results":"17","hashOfConfig":"18"},{"size":935,"mtime":1655329373265,"results":"19","hashOfConfig":"18"},{"size":362,"mtime":1655045874869,"results":"20","hashOfConfig":"18"},{"size":214,"mtime":1655057158511,"results":"21","hashOfConfig":"18"},{"size":4567,"mtime":1655405686997,"results":"22","hashOfConfig":"18"},{"size":149,"mtime":1655057120502,"results":"23","hashOfConfig":"18"},{"size":1162,"mtime":1655327725726,"results":"24","hashOfConfig":"18"},{"size":1854,"mtime":1655408750001,"results":"25","hashOfConfig":"18"},{"size":480,"mtime":1655167967702,"results":"26","hashOfConfig":"18"},{"size":5846,"mtime":1655405883208,"results":"27","hashOfConfig":"18"},{"size":3732,"mtime":1655405178780,"results":"28","hashOfConfig":"18"},{"size":298,"mtime":1655405265214,"results":"29","hashOfConfig":"18"},{"size":813,"mtime":1655405414917,"results":"30","hashOfConfig":"18"},{"size":2415,"mtime":1655405379132,"results":"31","hashOfConfig":"18"},{"size":1535,"mtime":1655405220307,"results":"32","hashOfConfig":"18"},{"size":1134,"mtime":1655734684874,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"65hjlw",{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","suppressedMessages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"37"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"37"},{"filePath":"59","messages":"60","suppressedMessages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"37"},{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"37"},{"filePath":"70","messages":"71","suppressedMessages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"37"},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"77","messages":"78","suppressedMessages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"37"},{"filePath":"84","messages":"85","suppressedMessages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90"},"C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\index.js",[],[],[],"C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\App.js",["91"],[],"//import logo from './logo.svg';\nimport './App.css';\nimport {store} from \"./actions/store\";\nimport {Provider} from \"react-redux\";\nimport {DCandidates, DCAndidateForm, Home, Navigation, Footer} from './components/';\nimport {Container} from \"@material-ui/core\";\nimport {ToastProvider} from \"react-toast-notifications\";\nimport { BrowserRouter as Router, Routes, Route} from \"react-router-dom\"\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Router>\n        <Navigation />\n        <ToastProvider autoDismiss={true}>\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/Submit\" element={<DCAndidateForm />} />\n          <Route path=\"/Submit/:id\" element={<DCAndidateForm />} />\n          <Route path=\"/View\" element={<DCandidates />} />\n        </Routes>\n        </ToastProvider>\n        <Footer />\n      </Router>\n    </Provider>\n  );\n}\n//<Container maxWidth=\"lg\">\n\nexport default App;\n","C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\reportWebVitals.js",[],[],"C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\actions\\store.js",[],[],"C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\components\\DCandidates.js",["92","93","94"],[],"import React,{useState,useEffect} from \"react\";\r\nimport { connect } from  \"react-redux\";\r\nimport * as actions  from \"../actions/DCandidate\";\r\nimport {Grid,Paper,TableContainer,Table,TableHead,TableBody,TableRow,TableCell,withStyles, ButtonGroup,Button} from \"@material-ui/core\";\r\nimport DCandidateForm from \"./DCandidateForm\";\r\nimport EditIcon from \"@material-ui/icons/Edit\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport {useToasts} from \"react-toast-notifications\";\r\nimport {Link} from \"react-router-dom\"\r\n\r\n//  Styling\r\nconst styles = theme =>({\r\n    paper:{\r\n        margin:theme.spacing(2),\r\n        padding:theme.spacing(2)\r\n    },\r\n    root:{\r\n        \"& .MuiTableCell-head\":{\r\n            fontSize:\"1.25rem\",\r\n            fontWeight: \"bold\",\r\n            color:\"green\"\r\n        }\r\n    }\r\n})\r\n//  DCandidates\r\n//  builds a table view of all Donation Candidates\r\n//\r\n//  param[in] classes object contains stayling info\r\n//  param[in] props object data store\r\n//\r\n//  returns component\r\nconst DCandidates = ( {classes,...props} )=>{\r\n    \r\n    //for toast msg\r\n    const {addToast} = useToasts()\r\n    useEffect(()=>{ \r\n        props.fetchAllDCandidates() // fetch all candidates\r\n    },[])\r\n    //  Delete\r\n    //  Confirms users action, before3 making the delete call\r\n    const onDelete = id =>{\r\n        if(window.confirm('Do you want to delete this record?'))\r\n            props.deleteDCandidate(id,()=>addToast(\"Record Deleted.\",{apperance:'info'}))\r\n    }\r\n\r\n    //return the component\r\n    return (\r\n    <Paper className={classes.paper} elevation={3}>\r\n        <Grid container>\r\n            <Grid item={true} xs={2}>\r\n                \r\n            </Grid>\r\n            <Grid item={true} xs={8}>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableHead className={classes.root}>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>Age</TableCell>\r\n                                <TableCell>Phone</TableCell>\r\n                                <TableCell>Blood Type</TableCell>\r\n                                <TableCell></TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                props.dCandidateData.map((record,index)=>{\r\n                                    return (\r\n                                        <TableRow key={index} hover>\r\n                                            <TableCell>{record.fullName}</TableCell>\r\n                                            <TableCell>{record.age}</TableCell>\r\n                                            <TableCell>{record.phone}</TableCell>\r\n                                            <TableCell>{record.bloodGroup}</TableCell>\r\n                                            <TableCell>\r\n                                                <ButtonGroup variant=\"text\">\r\n                                                    <Link to={{pathname:\"/Submit/\"+record.id}}>\r\n                                                        <Button>\r\n                                                            <EditIcon color=\"primary\"></EditIcon>\r\n                                                        </Button>\r\n                                                    </Link>\r\n                                                    <Button onClick={()=> onDelete(record.id)}>\r\n                                                        <DeleteIcon color=\"secondary\"></DeleteIcon>\r\n                                                    </Button>\r\n                                                </ButtonGroup>\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })\r\n                            \r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Grid>\r\n            <Grid item={true} xs={2}>\r\n                \r\n            </Grid>\r\n        </Grid>\r\n    </Paper>);\r\n}\r\n//  Map state data to props.dCandidateData\r\nconst mapStateToProps = state => ({\r\n    dCandidateData:state.dCandidate.data\r\n});\r\n\r\n//  Map actions to props\r\nconst mapActionToProps = {\r\n    fetchAllDCandidates:actions.fetchall,\r\n    deleteDCandidate:actions.Delete\r\n}\r\n\r\nexport default connect(mapStateToProps,mapActionToProps)(withStyles(styles)(DCandidates));","C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\reducers\\index.js",[],[],"C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\reducers\\dCandidate.js",["95","96","97"],[],"import {ACTION_TYPES} from \"../actions/DCandidate\";\r\n\r\nconst initialState = {\r\n    data:[]\r\n}\r\nexport const dCandidate = (state=initialState,action) => {\r\n    switch (action.type)\r\n    {\r\n        case ACTION_TYPES.FETCH_ALL:\r\n            var obj = {\r\n                ...state,\r\n                data:[...action.payload]\r\n            };\r\n            console.log(obj)\r\n            return obj;\r\n        case ACTION_TYPES.FETCH:\r\n            return {\r\n                ...state,\r\n                data:[action.payload]\r\n            };\r\n        case ACTION_TYPES.CREATE:\r\n                var obj= {\r\n                    ...state,\r\n                    data:[...state.data,action.payload]\r\n                };\r\n                console.log(obj)\r\n                return obj;\r\n        case ACTION_TYPES.UPDATE:\r\n            return  {\r\n                ...state,\r\n                data:state.data.map(x=>x.id == action.payload.id ? action.payload: x)\r\n            };\r\n        case ACTION_TYPES.DELETE:\r\n            return  {\r\n                ...state,\r\n                data: state.data.filter(x => x.id != action.payload)\r\n            };\r\n        default: return state;\r\n    }\r\n}","C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\actions\\DCandidate.js",[],[],"C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\actions\\api.js",["98"],[],"import axios from \"axios\";\r\n\r\nconst apiBaseUrl =\"https://localhost:7085/api/\";\r\n\r\nexport default {\r\n    dCandidate(url = apiBaseUrl + 'dcandidate/'){\r\n        let obj = {\r\n            fetchAll:() => axios.get(url), \r\n            fetchById: id => axios.get(url+id),\r\n            create: newRecord => axios.post(url,newRecord),\r\n            update: (id,obj) => axios.put(url+id,obj),\r\n            delete: id => axios.delete(url+id)\r\n        }\r\n        \r\n        return obj\r\n    }\r\n}","C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\components\\DCandidateForm.js",["99","100","101","102","103","104","105"],[],"import React,{useState,useEffect} from \"react\";\r\nimport {Paper,Grid,InputLabel,TextField, withStyles,FormControl,Select,MenuItem,Button, FormHelperText} from \"@material-ui/core\";\r\nimport useForm from \"./useForm\"\r\nimport { RecentActorsSharp } from \"@material-ui/icons\";\r\nimport { connect } from  \"react-redux\";\r\nimport * as actions  from \"../actions/DCandidate\";\r\nimport { useToasts } from  \"react-toast-notifications\";\r\nimport {useParams} from \"react-router-dom\"\r\n\r\n//  Initial form values\r\nconst initFieldValues = {\r\n    fullName:\"\",\r\n    phone:\"\",\r\n    email:\"\",\r\n    address:\"\",\r\n    age:\"\",\r\n    bloodGroup:\"\"\r\n}\r\n//  Styling\r\nconst styles = theme => ({ \r\n    paper:{\r\n        margin:theme.spacing(2),\r\n        padding:theme.spacing(2)\r\n    },\r\n    root:{\r\n        '& .MuiTextField-root':{\r\n            margin: theme.spacing(1),\r\n            minWidth:230\r\n        }\r\n    },\r\n    formControl:{\r\n        margin: theme.spacing(1),\r\n        minWidth:230\r\n    },\r\n    button:{\r\n        margin: theme.spacing(1)\r\n    }\r\n})\r\n//  DCandidateForm\r\n//\r\n//\r\n//  param[in] classes object styling object\r\n//  param[in] props object data store\r\nconst DCandidateForm = ( {classes, ...props} ) => {\r\n   //for Toast msg\r\n    const { addToast} = useToasts()\r\n    const {  //form helpers from useForm\r\n        values,\r\n        setValues,\r\n        handleInputChange,\r\n        inputLabel,\r\n        labelWidth,\r\n        setLabelWidth,\r\n        handleFormSubmit,\r\n        validateForm,\r\n        validationPatterns,\r\n        setValidationPatterns,\r\n        errors,\r\n        setErrors,\r\n        resetForm\r\n    } = useForm(initFieldValues,props,addToast)    \r\n    \r\n    const [currentId,setCurrentId]= useState(useParams().id)\r\n    props.currentId=currentId;\r\n    props.setCurrentId=setCurrentId;\r\n    //const {currentId}=useParams();\r\n    \r\n    useEffect(()=>{ \r\n        \r\n        if(currentId!=0 && currentId !=null)//load existing candidate data\r\n        {\r\n            props.fetchDCandidate(currentId,()=>{\r\n            setValues({\r\n                ...props.dCandidateData.find(x=> x.id == currentId)\r\n            })\r\n            setErrors({})})\r\n        }\r\n    },[props.currentId])\r\n    //set validation patterns\r\n    setValidationPatterns({fullName:{required:true,pattern:\"^....+$\"},email:{required:true,pattern:\"^.*@.*..*$\"},phone:{required:true,pasttern:\"^[0-9- ()]{8,16}$\"},bloodGroup:{required:true,pattern:\"^(?:A|B|AB|O)(?:[+-])$\"}})\r\n    //blood types\r\n    const BloodTypes=[\"A+\",\"A-\",\"B+\",\"B-\",\"AB+\",\"AB-\",\"O+\",\"O-\"]\r\n    \r\n\r\n    //return component\r\n    return (  \r\n        \r\n    <form autoComplete=\"off\" noValidate className={classes.root} onSubmit={handleFormSubmit}>\r\n        <Grid container>\r\n            <Grid item={true} xs={4}></Grid>\r\n            <Grid item={true} xs={4}>\r\n                <Paper className={classes.paper} elevation={3}>\r\n                    <h1 class=\"m-2\">Blood Donation Candidate Form</h1>\r\n                    <Grid container justify=\"center\">\r\n                    <TextField fullWidth id=\"dcandidate_fullname\" name=\"fullName\" variant=\"outlined\" label=\"Full Name\" value={values.fullName} onChange={handleInputChange} {...(errors.fullName && {error:true,helperText:errors.fullName})}/>\r\n                    <TextField fullWidth id=\"dcandidate_email\" name=\"email\" variant=\"outlined\" label=\"Email\" value={values.email} onChange={handleInputChange}  {...(errors.email && {error:true,helperText:errors.email})} />\r\n                    <FormControl fullWidth variant=\"outlined\" className={classes.formControl} {...errors.bloodGroup && {error:true}}>\r\n                        <InputLabel ref={inputLabel} id=\"dcandidate_bloodtype_label\">Blood Type</InputLabel>\r\n                        <Select id=\"dcandidate_bloodgroup\" name=\"bloodGroup\" value={values.bloodGroup} onChange={handleInputChange} labelId=\"dcandidate_bloodtype_label\" labelWidth={labelWidth}>\r\n                            <MenuItem value=\"\">Select Blood Type</MenuItem>\r\n                            {\r\n                                BloodTypes.map((record,index)=>{\r\n                                    return (\r\n                                        <MenuItem key={index} value={record}>{record}</MenuItem>\r\n                                    )\r\n                                })\r\n                            }\r\n                        </Select>\r\n                        {errors.bloodGroup && <FormHelperText>{errors.bloodGroup}</FormHelperText>}\r\n                    </FormControl>\r\n                    <TextField fullWidth id=\"dcandidate_phone\" name=\"phone\" variant=\"outlined\" label=\"Phone\" value={values.phone} onChange={handleInputChange} {...(errors.phone && {error:true,helperText:errors.phone})} />\r\n                    <TextField fullWidth id=\"dcandidate_address\" name=\"address\" variant=\"outlined\" label=\"Address\" value={values.address} onChange={handleInputChange}/>\r\n                    <TextField fullWidth id=\"dcandidate_age\" name=\"age\" variant=\"outlined\" label=\"Age\" value={values.age} onChange={handleInputChange}/>\r\n                    <Grid container justify=\"flex-end\">\r\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" className={classes.button}>Submit</Button>\r\n                        <Button variant=\"contained\" color=\"secondary\" className={classes.button} onClick={resetForm}>Cancel</Button>\r\n                    </Grid>\r\n                    </Grid>\r\n                </Paper>\r\n            </Grid>\r\n            <Grid item={true} xs={4}></Grid>\r\n        </Grid>\r\n    </form>\r\n    );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n    dCandidateData:state.dCandidate.data\r\n});\r\n\r\nconst mapActionToProps = {\r\n    createDCandidate:actions.create,\r\n    updateDCandidate:actions.update,\r\n    fetchDCandidate:actions.fetch\r\n}\r\nexport default connect(mapStateToProps,mapActionToProps)(withStyles(styles)(DCandidateForm));","C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\components\\useForm.js",["106","107","108","109","110","111"],[],"import React,{useState,useEffect} from \"react\"\r\n\r\n//  useForm\r\n//  Form helper, creates handlers for inpout change, form submission, field validation, and errors\r\nconst useForm = (initFieldValues,props,addToast) => {\r\n    let validationPatterns={}//{key:{required:boolean,pattern: regex string}}\r\n    const setValidationPatterns= p=>{//setter function\r\n        validationPatterns={...p}\r\n    }\r\n    const [values,setValues]= useState(initFieldValues)\r\n    const inputLabel = React.createRef();//reference for the Select object Label\r\n    const [labelWidth,setLabelWidth]= React.useState(0);//Label with and setter\r\n    React.useEffect(()=>{setLabelWidth(inputLabel.current.offsetWidth)})//init label width\r\n    \r\n    //  Handles changes to for input, updates values and calls the validation function on that field\r\n    const handleInputChange = e =>{\r\n        const {name,value}= e.target\r\n        \r\n        setValues({\r\n            ...values,\r\n            [name]:value\r\n        })\r\n        if(validationPatterns[name])\r\n            validateForm({...{[name]:validationPatterns[name]}})\r\n    }\r\n\r\n    //  handle form submission\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault()\r\n        \r\n        if(validateForm())//validate form\r\n        {\r\n            //  Success function\r\n            //  Helper function to resets form and creates a toast message\r\n            //  params[in] msg string message for the Toast\r\n            const onSuccess = (msg) => {\r\n                resetForm()  //reset form to default values\r\n                addToast(msg,{apperance:'success'}) // create a toast message\r\n            }\r\n            \r\n            if(props.currentId == 0 || props.currentId == null) // new record\r\n                props.createDCandidate(values,()=>{onSuccess(\"Record Inserted!\")})\r\n            else //update existing\r\n                props.updateDCandidate(props.currentId,values,()=>{onSuccess(\"Record Updated!\")})\r\n        }\r\n    }\r\n    //error object and setter\r\n    const [errors,setErrors] = useState({})\r\n\r\n    //  resetForm function\r\n    //  resets all fields in the form to initial values.  Resets error object to an empty object\r\n    const resetForm = () =>{\r\n        console.log(\"Reseting Form\")\r\n        setValues({...initFieldValues});\r\n        setErrors({})\r\n        props.setCurrentId(0)\r\n    }\r\n    const validateForm = (fieldValidation=validationPatterns) =>{//{key:{required: boolean,pattern:...},...}\r\n        let temp={}\r\n        \r\n        Object.keys(fieldValidation).map((key,i)=>{//just check for a value\r\n            if(fieldValidation[key].required && !values[key]) // validate field is required and not empty\r\n            {\r\n                temp[key]=values[key]?\"\":\"This field is required.\"\r\n            }\r\n            if(values[key] && fieldValidation[key].pattern) // validadate field value passes the regex pattern check\r\n            {\r\n                const regEx=RegExp(fieldValidation[key].pattern,\"g\")\r\n                temp[key] = regEx.test(values[key])?\"\":\"Invalid value\"\r\n            }\r\n            \r\n        })\r\n        //set any errors to the errors object\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        if(fieldValidation==validationPatterns)//if form submission, return true if no validation errors\r\n            return Object.values(temp).every(x=> x == \"\")\r\n    }\r\n    //return all the form helpers\r\n    return {\r\n        values,\r\n        setValues,\r\n        handleInputChange,\r\n        inputLabel,\r\n        labelWidth,\r\n        setLabelWidth,\r\n        handleFormSubmit, \r\n        validateForm,\r\n        validationPatterns,\r\n        setValidationPatterns,\r\n        errors,\r\n        setErrors,\r\n        resetForm    \r\n    };\r\n}\r\n\r\nexport default useForm;","C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\components\\index.js",[],[],"C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\components\\Footer.jsx",[],[],"C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\components\\Home.jsx",["112","113"],[],"//import dependencies\r\nimport React,{useState,useEffect} from \"react\";\r\nimport {Paper,Grid,withStyles} from \"@material-ui/core\";\r\nimport Weather from \"./Weather\"\r\nimport axios from \"axios\";\r\n\r\n\r\n//  Styling overrides\r\nconst styles = theme => ({ \r\n    paper:{\r\n        margin:theme.spacing(2),\r\n        padding:theme.spacing(2)\r\n    }\r\n})\r\n//  Home\r\n//  Defines home component, which displays filler image and text and current weather for Rahway Nj.\r\n//  params[in]  classes object styling object\r\n//  returns the component\r\nconst Home=({classes}) =>{\r\n    //Setting upexternal API call for weath\r\n    const options = {\r\n        method: 'GET',\r\n        url: 'https://weatherapi-com.p.rapidapi.com/current.json',\r\n        params: {q: '07065'},\r\n        headers: {\r\n          'X-RapidAPI-Key': '3ab45978d8mshb680163359ee218p195cf3jsnf97add07d05c',\r\n          'X-RapidAPI-Host': 'weatherapi-com.p.rapidapi.com'\r\n        }\r\n      };\r\n    //Weather object and setter\r\n    const[weather,setWeather]=useState();\r\n    //make api call\r\n    useEffect(()=>{\r\n        //api call\r\n      axios.request(options).then(function (response) {\r\n          setWeather(response.data);//set data\r\n      }).catch(function (error) {\r\n          console.error(error);\r\n      });\r\n\r\n    },[]);\r\n    \r\n    //return component\r\n    return (\r\n    <Paper className={classes.paper} elevation={0}>\r\n        <Grid container>\r\n            <Grid item xs={7}>\r\n                <img class=\"img-fluid rounded mb-4 mb-lg-0\" src=\"http://via.placeholder.com/800x400\"></img>\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n                <p class=\"h3 font-weight-bold\">Placeholder IMG and Lorem ipsum</p>\r\n                <blockquote class=\"blockquote\">\r\n                    <p>Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.</p>\r\n                </blockquote>\r\n            </Grid>\r\n            {weather != null ? <Weather data={weather} />:<p>Loading the weather...</p>}\r\n        </Grid>\r\n    </Paper>\r\n    );\r\n}\r\n\r\nexport default withStyles(styles)(Home);","C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\components\\Navbar.jsx",[],[],"C:\\Users\\Tom\\source\\repos\\donate-candidate-app\\src\\components\\Weather.jsx",["114","115"],[],"//  import dependencies\r\nimport React from \"react\";\r\nimport {Grid,withStyles} from \"@material-ui/core\";\r\n\r\n//  define weather component\r\n//  param[in] data object this is expecting the data result form the external api call to https://weatherapi-com.p.rapidapi.com/current.json\r\n//  returns the component\r\nconst Weather=({data})=>{\r\n    return (\r\n        <Grid container xs={12}>\r\n            <div  class=\"mb-2 mt-4 display-4 fw\">Today's Weather</div>\r\n            <Grid item xs={1}>\r\n                <img src={\"http:\"+data.current.condition.icon}/>\r\n                <div>{data.current.condition.text}</div>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n                <div class=\"fw\">Temp (F)</div>\r\n                <span class=\"display-3\">\r\n                    {data.current.temp_f}\r\n                </span>\r\n            </Grid>\r\n            <Grid item xs={2}>\r\n                <div class=\"fw\">Wind (mph)</div>\r\n                <span  class=\"display-3\">\r\n                    {data.current.wind_mph}\r\n                </span> {data.current.wind_dir}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Weather;",{"ruleId":"116","severity":1,"message":"117","line":6,"column":9,"nodeType":"118","messageId":"119","endLine":6,"endColumn":18},{"ruleId":"116","severity":1,"message":"120","line":1,"column":15,"nodeType":"118","messageId":"119","endLine":1,"endColumn":23},{"ruleId":"116","severity":1,"message":"121","line":5,"column":8,"nodeType":"118","messageId":"119","endLine":5,"endColumn":22},{"ruleId":"122","severity":1,"message":"123","line":38,"column":7,"nodeType":"124","endLine":38,"endColumn":9,"suggestions":"125"},{"ruleId":"126","severity":1,"message":"127","line":22,"column":21,"nodeType":"118","messageId":"128","endLine":22,"endColumn":24},{"ruleId":"129","severity":1,"message":"130","line":31,"column":45,"nodeType":"131","messageId":"132","endLine":31,"endColumn":47},{"ruleId":"129","severity":1,"message":"133","line":36,"column":51,"nodeType":"131","messageId":"132","endLine":36,"endColumn":53},{"ruleId":"134","severity":1,"message":"135","line":5,"column":1,"nodeType":"136","endLine":17,"endColumn":2},{"ruleId":"116","severity":1,"message":"137","line":4,"column":10,"nodeType":"118","messageId":"119","endLine":4,"endColumn":27},{"ruleId":"116","severity":1,"message":"138","line":53,"column":9,"nodeType":"118","messageId":"119","endLine":53,"endColumn":22},{"ruleId":"116","severity":1,"message":"139","line":55,"column":9,"nodeType":"118","messageId":"119","endLine":55,"endColumn":21},{"ruleId":"116","severity":1,"message":"140","line":56,"column":9,"nodeType":"118","messageId":"119","endLine":56,"endColumn":27},{"ruleId":"129","severity":1,"message":"133","line":70,"column":21,"nodeType":"131","messageId":"132","endLine":70,"endColumn":23},{"ruleId":"129","severity":1,"message":"130","line":74,"column":55,"nodeType":"131","messageId":"132","endLine":74,"endColumn":57},{"ruleId":"122","severity":1,"message":"141","line":78,"column":7,"nodeType":"124","endLine":78,"endColumn":24,"suggestions":"142"},{"ruleId":"116","severity":1,"message":"143","line":1,"column":24,"nodeType":"118","messageId":"119","endLine":1,"endColumn":33},{"ruleId":"122","severity":1,"message":"144","line":13,"column":5,"nodeType":"145","endLine":13,"endColumn":20,"suggestions":"146"},{"ruleId":"129","severity":1,"message":"130","line":41,"column":32,"nodeType":"131","messageId":"132","endLine":41,"endColumn":34},{"ruleId":"147","severity":1,"message":"148","line":61,"column":49,"nodeType":"149","messageId":"150","endLine":61,"endColumn":51},{"ruleId":"129","severity":1,"message":"130","line":77,"column":27,"nodeType":"131","messageId":"132","endLine":77,"endColumn":29},{"ruleId":"129","severity":1,"message":"130","line":78,"column":52,"nodeType":"131","messageId":"132","endLine":78,"endColumn":54},{"ruleId":"122","severity":1,"message":"151","line":41,"column":7,"nodeType":"124","endLine":41,"endColumn":9,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":48,"column":17,"nodeType":"155","endLine":48,"endColumn":102},{"ruleId":"116","severity":1,"message":"156","line":3,"column":14,"nodeType":"118","messageId":"119","endLine":3,"endColumn":24},{"ruleId":"153","severity":1,"message":"154","line":13,"column":17,"nodeType":"155","endLine":13,"endColumn":65},"no-unused-vars","'Container' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'DCandidateForm' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["157"],"no-redeclare","'obj' is already defined.","redeclared","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'RecentActorsSharp' is defined but never used.","'setLabelWidth' is assigned a value but never used.","'validateForm' is assigned a value but never used.","'validationPatterns' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'currentId', 'props', 'setErrors', and 'setValues'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["158"],"'useEffect' is defined but never used.","React Hook useEffect contains a call to 'setLabelWidth'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [inputLabel] as a second argument to the useEffect Hook.","MemberExpression",["159"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'options'. Either include it or remove the dependency array.",["160"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'withStyles' is defined but never used.",{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},"Update the dependencies array to be: [props]",{"range":"169","text":"170"},"Update the dependencies array to be: [currentId, props, props.currentId, setErrors, setValues]",{"range":"171","text":"172"},"Add dependencies array: [inputLabel]",{"range":"173","text":"174"},"Update the dependencies array to be: [options]",{"range":"175","text":"176"},[1206,1208],"[props]",[2145,2162],"[currentId, props, props.currentId, setErrors, setValues]",[686,686],", [inputLabel]",[1259,1261],"[options]"]