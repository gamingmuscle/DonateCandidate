{"ast":null,"code":"import _defineProperty from\"C:/Users/Tom/source/repos/donate-candidate-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";import _slicedToArray from\"C:/Users/Tom/source/repos/donate-candidate-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _objectSpread from\"C:/Users/Tom/source/repos/donate-candidate-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState,useEffect}from\"react\";//  useForm\n//  Form helper, creates handlers for inpout change, form submission, field validation, and errors\nvar useForm=function useForm(initFieldValues,props,addToast){var validationPatterns={};//{key:{required:boolean,pattern: regex string}}\nvar setValidationPatterns=function setValidationPatterns(p){//setter function\nvalidationPatterns=_objectSpread({},p);};var _useState=useState(initFieldValues),_useState2=_slicedToArray(_useState,2),values=_useState2[0],setValues=_useState2[1];var inputLabel=/*#__PURE__*/React.createRef();//reference for the Select object Label\nvar _React$useState=React.useState(0),_React$useState2=_slicedToArray(_React$useState,2),labelWidth=_React$useState2[0],setLabelWidth=_React$useState2[1];//Label with and setter\nReact.useEffect(function(){setLabelWidth(inputLabel.current.offsetWidth);});//init label width\n//  Handles changes to for input, updates values and calls the validation function on that field\nvar handleInputChange=function handleInputChange(e){var _e$target=e.target,name=_e$target.name,value=_e$target.value;setValues(_objectSpread(_objectSpread({},values),{},_defineProperty({},name,value)));if(validationPatterns[name])validateForm(_objectSpread({},_defineProperty({},name,validationPatterns[name])));};//  handle form submission\nvar handleFormSubmit=function handleFormSubmit(e){e.preventDefault();if(validateForm())//validate form\n{//  Success function\n//  Helper function to resets form and creates a toast message\n//  params[in] msg string message for the Toast\nvar onSuccess=function onSuccess(msg){resetForm();//reset form to default values\naddToast(msg,{apperance:'success'});// create a toast message\n};if(props.currentId==0||props.currentId==null)// new record\nprops.createDCandidate(values,function(){onSuccess(\"Record Inserted!\");});else//update existing\nprops.updateDCandidate(props.currentId,values,function(){onSuccess(\"Record Updated!\");});}};//error object and setter\nvar _useState3=useState({}),_useState4=_slicedToArray(_useState3,2),errors=_useState4[0],setErrors=_useState4[1];//  resetForm function\n//  resets all fields in the form to initial values.  Resets error object to an empty object\nvar resetForm=function resetForm(){console.log(\"Reseting Form\");setValues(_objectSpread({},initFieldValues));setErrors({});props.setCurrentId(0);};var validateForm=function validateForm(){var fieldValidation=arguments.length>0&&arguments[0]!==undefined?arguments[0]:validationPatterns;//{key:{required: boolean,pattern:...},...}\nvar temp={};Object.keys(fieldValidation).map(function(key,i){//just check for a value\nif(fieldValidation[key].required&&!values[key])// validate field is required and not empty\n{temp[key]=values[key]?\"\":\"This field is required.\";}if(values[key]&&fieldValidation[key].pattern)// validadate field value passes the regex pattern check\n{var regEx=RegExp(fieldValidation[key].pattern,\"g\");temp[key]=regEx.test(values[key])?\"\":\"Invalid value\";}});//set any errors to the errors object\nsetErrors(_objectSpread({},temp));if(fieldValidation==validationPatterns)//if form submission, return true if no validation errors\nreturn Object.values(temp).every(function(x){return x==\"\";});};//return all the form helpers\nreturn{values:values,setValues:setValues,handleInputChange:handleInputChange,inputLabel:inputLabel,labelWidth:labelWidth,setLabelWidth:setLabelWidth,handleFormSubmit:handleFormSubmit,validateForm:validateForm,validationPatterns:validationPatterns,setValidationPatterns:setValidationPatterns,errors:errors,setErrors:setErrors,resetForm:resetForm};};export default useForm;","map":{"version":3,"names":["React","useState","useEffect","useForm","initFieldValues","props","addToast","validationPatterns","setValidationPatterns","p","values","setValues","inputLabel","createRef","labelWidth","setLabelWidth","current","offsetWidth","handleInputChange","e","target","name","value","validateForm","handleFormSubmit","preventDefault","onSuccess","msg","resetForm","apperance","currentId","createDCandidate","updateDCandidate","errors","setErrors","console","log","setCurrentId","fieldValidation","temp","Object","keys","map","key","i","required","pattern","regEx","RegExp","test","every","x"],"sources":["C:/Users/Tom/source/repos/donate-candidate-app/src/components/useForm.js"],"sourcesContent":["import React,{useState,useEffect} from \"react\"\r\n\r\n//  useForm\r\n//  Form helper, creates handlers for inpout change, form submission, field validation, and errors\r\nconst useForm = (initFieldValues,props,addToast) => {\r\n    let validationPatterns={}//{key:{required:boolean,pattern: regex string}}\r\n    const setValidationPatterns= p=>{//setter function\r\n        validationPatterns={...p}\r\n    }\r\n    const [values,setValues]= useState(initFieldValues)\r\n    const inputLabel = React.createRef();//reference for the Select object Label\r\n    const [labelWidth,setLabelWidth]= React.useState(0);//Label with and setter\r\n    React.useEffect(()=>{setLabelWidth(inputLabel.current.offsetWidth)})//init label width\r\n    \r\n    //  Handles changes to for input, updates values and calls the validation function on that field\r\n    const handleInputChange = e =>{\r\n        const {name,value}= e.target\r\n        \r\n        setValues({\r\n            ...values,\r\n            [name]:value\r\n        })\r\n        if(validationPatterns[name])\r\n            validateForm({...{[name]:validationPatterns[name]}})\r\n    }\r\n\r\n    //  handle form submission\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault()\r\n        \r\n        if(validateForm())//validate form\r\n        {\r\n            //  Success function\r\n            //  Helper function to resets form and creates a toast message\r\n            //  params[in] msg string message for the Toast\r\n            const onSuccess = (msg) => {\r\n                resetForm()  //reset form to default values\r\n                addToast(msg,{apperance:'success'}) // create a toast message\r\n            }\r\n            \r\n            if(props.currentId == 0 || props.currentId == null) // new record\r\n                props.createDCandidate(values,()=>{onSuccess(\"Record Inserted!\")})\r\n            else //update existing\r\n                props.updateDCandidate(props.currentId,values,()=>{onSuccess(\"Record Updated!\")})\r\n        }\r\n    }\r\n    //error object and setter\r\n    const [errors,setErrors] = useState({})\r\n\r\n    //  resetForm function\r\n    //  resets all fields in the form to initial values.  Resets error object to an empty object\r\n    const resetForm = () =>{\r\n        console.log(\"Reseting Form\")\r\n        setValues({...initFieldValues});\r\n        setErrors({})\r\n        props.setCurrentId(0)\r\n    }\r\n    const validateForm = (fieldValidation=validationPatterns) =>{//{key:{required: boolean,pattern:...},...}\r\n        let temp={}\r\n        \r\n        Object.keys(fieldValidation).map((key,i)=>{//just check for a value\r\n            if(fieldValidation[key].required && !values[key]) // validate field is required and not empty\r\n            {\r\n                temp[key]=values[key]?\"\":\"This field is required.\"\r\n            }\r\n            if(values[key] && fieldValidation[key].pattern) // validadate field value passes the regex pattern check\r\n            {\r\n                const regEx=RegExp(fieldValidation[key].pattern,\"g\")\r\n                temp[key] = regEx.test(values[key])?\"\":\"Invalid value\"\r\n            }\r\n            \r\n        })\r\n        //set any errors to the errors object\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        if(fieldValidation==validationPatterns)//if form submission, return true if no validation errors\r\n            return Object.values(temp).every(x=> x == \"\")\r\n    }\r\n    //return all the form helpers\r\n    return {\r\n        values,\r\n        setValues,\r\n        handleInputChange,\r\n        inputLabel,\r\n        labelWidth,\r\n        setLabelWidth,\r\n        handleFormSubmit, \r\n        validateForm,\r\n        validationPatterns,\r\n        setValidationPatterns,\r\n        errors,\r\n        setErrors,\r\n        resetForm    \r\n    };\r\n}\r\n\r\nexport default useForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}