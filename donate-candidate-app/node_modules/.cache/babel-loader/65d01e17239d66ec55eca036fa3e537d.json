{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\n\nconst useForm = (initFieldValues, props, addToast) => {\n  _s();\n\n  let validationPatterns = {};\n\n  const setValidationPatterns = p => {\n    //{key:{required:boolean,pattern: regex string}}\n    validationPatterns = { ...p\n    };\n  };\n\n  const [values, setValues] = useState(initFieldValues);\n  const inputLabel = /*#__PURE__*/React.createRef();\n  const [labelWidth, setLabelWidth] = React.useState(0);\n  React.useEffect(() => {\n    setLabelWidth(inputLabel.current.offsetWidth);\n  });\n\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    console.log(name + \":\" + value);\n    setValues({ ...values,\n      [name]: value\n    });\n    if (validationPatterns[name]) validateForm({ ...{\n        [name]: validationPatterns[name]\n      }\n    });\n  };\n\n  const handleFormSubmit = e => {\n    e.preventDefault();\n    console.log(values);\n\n    if (validateForm()) {\n      const onSuccess = msg => addToast(msg, {\n        apperance: 'success'\n      });\n\n      if (props.currentId == 0) // new record\n        props.createDCandidate(values, () => {\n          window.alert(\"Inserted!\");\n        });else props.updateDCandidate(props.currentId, values, () => {\n        window.alert(\"Inserted!\");\n      });\n    }\n\n    resetForm();\n  };\n\n  const [errors, setErrors] = useState({});\n\n  const resetForm = () => {\n    setValues({ ...initFieldValues\n    });\n    setErrors({});\n    props.setCurrentId(0);\n  };\n\n  const validateForm = function () {\n    let fieldValidation = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : validationPatterns;\n    //{key:{required: boolean,pattern:...},...}\n    let temp = {};\n    console.log(fieldValidation);\n    console.log(values);\n    Object.keys(fieldValidation).map((key, i) => {\n      //just check for a value\n      if (fieldValidation[key].required && !values[key]) {\n        console.log(key + \":\" + values[key]);\n        temp[key] = values[key] ? \"\" : \"This field is required.\";\n      }\n\n      if (values[key] && fieldValidation[key].pattern) {\n        const regEx = RegExp(fieldValidation[key].pattern, \"g\");\n        temp[key] = regEx.test(values[key]) ? \"\" : \"Invalid value\";\n      }\n    });\n    console.log(temp);\n    setErrors({ ...temp\n    });\n    if (fieldValidation == validationPatterns) return Object.values(temp).every(x => x == \"\");\n  };\n\n  return {\n    values,\n    setValues,\n    handleInputChange,\n    inputLabel,\n    labelWidth,\n    setLabelWidth,\n    handleFormSubmit,\n    validateForm,\n    validationPatterns,\n    setValidationPatterns,\n    errors,\n    setErrors,\n    resetForm\n  };\n};\n\n_s(useForm, \"3FwiCu3MBiMHxTd3n7hpta88VNk=\");\n\nexport default useForm;","map":{"version":3,"names":["React","useState","useEffect","useForm","initFieldValues","props","addToast","validationPatterns","setValidationPatterns","p","values","setValues","inputLabel","createRef","labelWidth","setLabelWidth","current","offsetWidth","handleInputChange","e","name","value","target","console","log","validateForm","handleFormSubmit","preventDefault","onSuccess","msg","apperance","currentId","createDCandidate","window","alert","updateDCandidate","resetForm","errors","setErrors","setCurrentId","fieldValidation","temp","Object","keys","map","key","i","required","pattern","regEx","RegExp","test","every","x"],"sources":["C:/Users/Tom/source/repos/donate-candidate-app/src/components/useForm.js"],"sourcesContent":["import React,{useState,useEffect} from \"react\"\r\nconst useForm = (initFieldValues,props,addToast) => {\r\n    let validationPatterns={}\r\n    const setValidationPatterns= p=>{//{key:{required:boolean,pattern: regex string}}\r\n        validationPatterns={...p}\r\n    }\r\n    const [values,setValues]= useState(initFieldValues)\r\n    const inputLabel = React.createRef();\r\n    const [labelWidth,setLabelWidth]= React.useState(0);\r\n    React.useEffect(()=>{setLabelWidth(inputLabel.current.offsetWidth)})\r\n\r\n    const handleInputChange = e =>{\r\n        const {name,value}= e.target\r\n        console.log(name+\":\"+value)\r\n        setValues({\r\n            ...values,\r\n            [name]:value\r\n        })\r\n        if(validationPatterns[name])\r\n            validateForm({...{[name]:validationPatterns[name]}})\r\n    }\r\n    const handleFormSubmit = (e) => {\r\n        e.preventDefault()\r\n        console.log(values);    \r\n        if(validateForm())\r\n        {\r\n            const onSuccess = (msg) => addToast(msg,{apperance:'success'})\r\n            if(props.currentId == 0) // new record\r\n                props.createDCandidate(values,()=>{window.alert(\"Inserted!\")})\r\n            else\r\n                props.updateDCandidate(props.currentId,values,()=>{window.alert(\"Inserted!\")})\r\n        }\r\n        resetForm()\r\n    }\r\n    const [errors,setErrors] = useState({})\r\n    const resetForm = () =>{\r\n        setValues({...initFieldValues});\r\n        setErrors({})\r\n        props.setCurrentId(0)\r\n    }\r\n    const validateForm = (fieldValidation=validationPatterns) =>{//{key:{required: boolean,pattern:...},...}\r\n        let temp={}\r\n        console.log(fieldValidation)\r\n        console.log(values)\r\n        Object.keys(fieldValidation).map((key,i)=>{//just check for a value\r\n            if(fieldValidation[key].required && !values[key])\r\n            {\r\n                console.log(key+\":\"+values[key])\r\n                temp[key]=values[key]?\"\":\"This field is required.\"\r\n            }\r\n            if(values[key] && fieldValidation[key].pattern)\r\n            {\r\n                const regEx=RegExp(fieldValidation[key].pattern,\"g\")\r\n                temp[key] = regEx.test(values[key])?\"\":\"Invalid value\"\r\n            }\r\n            \r\n        })\r\n        console.log(temp)\r\n        setErrors({\r\n            ...temp\r\n        })\r\n        if(fieldValidation==validationPatterns)\r\n            return Object.values(temp).every(x=> x == \"\")\r\n    }\r\n    return {\r\n        values,\r\n        setValues,\r\n        handleInputChange,\r\n        inputLabel,\r\n        labelWidth,\r\n        setLabelWidth,\r\n        handleFormSubmit, \r\n        validateForm,\r\n        validationPatterns,\r\n        setValidationPatterns,\r\n        errors,\r\n        setErrors,\r\n        resetForm    \r\n    };\r\n}\r\n\r\nexport default useForm;"],"mappings":"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"},"metadata":{},"sourceType":"module"}