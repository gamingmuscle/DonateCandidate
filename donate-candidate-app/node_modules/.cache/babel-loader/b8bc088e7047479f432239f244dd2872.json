{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Tom\\\\source\\\\repos\\\\donate-candidate-app\\\\src\\\\components\\\\DCandidates.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { connect } from \"react-redux\";\nimport * as actions from \"../actions/DCandidate\";\nimport { Grid, Paper, TableContainer, Table, TableHead, TableBody, TableRow, TableCell } from \"@material-ui/core\";\nimport DCandidateForm from \"./DCandidateForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DCandidates = props => {\n  _s();\n\n  useEffect(() => {\n    props.fetchAllDCandidates();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(DCandidateForm, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              children: /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 22,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Phone\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 23,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: \"Blood Type\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 24,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 21,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: props.dCandidateData.map((record, index) => {\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: record.fullName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 32,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: record.phone\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 33,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    children: record.BloodGroup\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 34,\n                    columnNumber: 45\n                  }, this)]\n                }, index, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 31,\n                  columnNumber: 41\n                }, this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DCandidates, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = DCandidates;\n\nconst mapStateToProps = state => ({\n  dCandidateData: state.dCandidate.data\n});\n\nconst mapActionToProps = {\n  fetchAllDCandidates: actions.fetchall\n};\nexport default connect(mapStateToProps, mapActionToProps)(DCandidates);\n\nvar _c;\n\n$RefreshReg$(_c, \"DCandidates\");","map":{"version":3,"names":["React","useState","useEffect","connect","actions","Grid","Paper","TableContainer","Table","TableHead","TableBody","TableRow","TableCell","DCandidateForm","DCandidates","props","fetchAllDCandidates","dCandidateData","map","record","index","fullName","phone","BloodGroup","mapStateToProps","state","dCandidate","data","mapActionToProps","fetchall"],"sources":["C:/Users/Tom/source/repos/donate-candidate-app/src/components/DCandidates.js"],"sourcesContent":["import React,{useState,useEffect} from \"react\";\r\nimport { connect } from  \"react-redux\";\r\nimport * as actions  from \"../actions/DCandidate\"\r\nimport {Grid,Paper,TableContainer,Table,TableHead,TableBody,TableRow,TableCell} from \"@material-ui/core\";\r\nimport DCandidateForm from \"./DCandidateForm\";\r\n\r\nconst DCandidates = ( props )=>{\r\n    useEffect(()=>{\r\n        props.fetchAllDCandidates()\r\n    },[])\r\n    return (\r\n    <Paper>\r\n        <Grid container>\r\n            <Grid xs={6}>\r\n                <DCandidateForm></DCandidateForm>\r\n            </Grid>\r\n            <Grid xs={6}>\r\n                <TableContainer>\r\n                    <Table>\r\n                        <TableHead>\r\n                            <TableRow>\r\n                                <TableCell>Name</TableCell>\r\n                                <TableCell>Phone</TableCell>\r\n                                <TableCell>Blood Type</TableCell>\r\n                            </TableRow>\r\n                        </TableHead>\r\n                        <TableBody>\r\n                            {\r\n                                props.dCandidateData.map((record,index)=>{\r\n                                    return (\r\n                                        <TableRow key={index}>\r\n                                            <TableCell>{record.fullName}</TableCell>\r\n                                            <TableCell>{record.phone}</TableCell>\r\n                                            <TableCell>{record.BloodGroup}</TableCell>\r\n                                        </TableRow>\r\n                                    );\r\n                                })\r\n                            \r\n                            }\r\n                        </TableBody>\r\n                    </Table>\r\n                </TableContainer>\r\n            </Grid>\r\n        </Grid>\r\n    </Paper>);\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n    dCandidateData:state.dCandidate.data\r\n});\r\n\r\nconst mapActionToProps = {\r\n    fetchAllDCandidates:actions.fetchall\r\n}\r\n\r\nexport default connect(mapStateToProps,mapActionToProps)(DCandidates);"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAASC,OAAT,QAAyB,aAAzB;AACA,OAAO,KAAKC,OAAZ,MAA0B,uBAA1B;AACA,SAAQC,IAAR,EAAaC,KAAb,EAAmBC,cAAnB,EAAkCC,KAAlC,EAAwCC,SAAxC,EAAkDC,SAAlD,EAA4DC,QAA5D,EAAqEC,SAArE,QAAqF,mBAArF;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;;AAEA,MAAMC,WAAW,GAAKC,KAAF,IAAW;EAAA;;EAC3Bb,SAAS,CAAC,MAAI;IACVa,KAAK,CAACC,mBAAN;EACH,CAFQ,EAEP,EAFO,CAAT;EAGA,oBACA,QAAC,KAAD;IAAA,uBACI,QAAC,IAAD;MAAM,SAAS,MAAf;MAAA,wBACI,QAAC,IAAD;QAAM,EAAE,EAAE,CAAV;QAAA,uBACI,QAAC,cAAD;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QADJ,eAII,QAAC,IAAD;QAAM,EAAE,EAAE,CAAV;QAAA,uBACI,QAAC,cAAD;UAAA,uBACI,QAAC,KAAD;YAAA,wBACI,QAAC,SAAD;cAAA,uBACI,QAAC,QAAD;gBAAA,wBACI,QAAC,SAAD;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QADJ,eAEI,QAAC,SAAD;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAFJ,eAGI,QAAC,SAAD;kBAAA;gBAAA;kBAAA;kBAAA;kBAAA;gBAAA,QAHJ;cAAA;gBAAA;gBAAA;gBAAA;cAAA;YADJ;cAAA;cAAA;cAAA;YAAA,QADJ,eAQI,QAAC,SAAD;cAAA,UAEQD,KAAK,CAACE,cAAN,CAAqBC,GAArB,CAAyB,CAACC,MAAD,EAAQC,KAAR,KAAgB;gBACrC,oBACI,QAAC,QAAD;kBAAA,wBACI,QAAC,SAAD;oBAAA,UAAYD,MAAM,CAACE;kBAAnB;oBAAA;oBAAA;oBAAA;kBAAA,QADJ,eAEI,QAAC,SAAD;oBAAA,UAAYF,MAAM,CAACG;kBAAnB;oBAAA;oBAAA;oBAAA;kBAAA,QAFJ,eAGI,QAAC,SAAD;oBAAA,UAAYH,MAAM,CAACI;kBAAnB;oBAAA;oBAAA;oBAAA;kBAAA,QAHJ;gBAAA,GAAeH,KAAf;kBAAA;kBAAA;kBAAA;gBAAA,QADJ;cAOH,CARD;YAFR;cAAA;cAAA;cAAA;YAAA,QARJ;UAAA;YAAA;YAAA;YAAA;UAAA;QADJ;UAAA;UAAA;UAAA;QAAA;MADJ;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA;EADJ;IAAA;IAAA;IAAA;EAAA,QADA;AAmCH,CAvCD;;GAAMN,W;;KAAAA,W;;AAyCN,MAAMU,eAAe,GAAGC,KAAK,KAAK;EAC9BR,cAAc,EAACQ,KAAK,CAACC,UAAN,CAAiBC;AADF,CAAL,CAA7B;;AAIA,MAAMC,gBAAgB,GAAG;EACrBZ,mBAAmB,EAACZ,OAAO,CAACyB;AADP,CAAzB;AAIA,eAAe1B,OAAO,CAACqB,eAAD,EAAiBI,gBAAjB,CAAP,CAA0Cd,WAA1C,CAAf"},"metadata":{},"sourceType":"module"}